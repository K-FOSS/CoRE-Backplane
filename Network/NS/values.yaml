---
global:
  # -- Set the entire name definition
  fullnameOverride: ns-core

controllers:
  main:
    # For Deployments, valid values are Recreate (default) and RollingUpdate.
    # For StatefulSets, valid values are OnDelete and RollingUpdate (default).
    # DaemonSets/CronJobs ignore this.
    strategy: RollingUpdate

    containers:
      main:
        image:
          repository: powerdns/pdns-auth-48
          tag: 4.8.4
          pullPolicy: IfNotPresent

        # -- Override the command(s) for the default container
        command: ['/usr/local/sbin/pdns_server']
        # -- Override the args for the default container
        args: 
          - --config-dir=/etc/pdns
          - --disable-syslog=yes
          - --socket-dir=/tmp
          - --gpgsql-host=psql-int.mylogin.space
          - --gpgsql-port=$(PSQL_PORT)
          - --gpgsql-dbname=DlzcnePHKR
          - --gpgsql-user=$(USERNAME)
          - --gpgsql-password=$(PASSWORD)

        env:
          - name: PSQL_HOSTNAME
            valueFrom:
              secretKeyRef:
                name: '{{ include "bjw-s.common.lib.chart.names.fullname" $ }}-creds'
                key: psqlHostname

          - name: PSQL_PORT
            valueFrom:
              secretKeyRef:
                name: '{{ include "bjw-s.common.lib.chart.names.fullname" $ }}-creds'
                key: psqlPort

          - name: USERNAME
            valueFrom:
              secretKeyRef:
                name: '{{ include "bjw-s.common.lib.chart.names.fullname" $ }}-creds'
                key: username

          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                name: '{{ include "bjw-s.common.lib.chart.names.fullname" $ }}-creds'
                key: password

        # -- Override the working directory for the default container
        workingDir: /etc/pdns

        # -- Probe configuration
        # -- [[ref]](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
        # @default -- See below
        probes:
          # -- Liveness probe configuration
          # @default -- See below
          liveness:
            # -- Enable the liveness probe
            enabled: false
            # -- Set this to `true` if you wish to specify your own livenessProbe
            custom: false
            # -- sets the probe type when not using a custom probe
            # @default -- "TCP"
            type: TCP
            # -- The spec field contains the values for the default livenessProbe.
            # If you selected `custom: true`, this field holds the definition of the livenessProbe.
            # @default -- See below
            spec:
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3

          # -- Redainess probe configuration
          # @default -- See below
          readiness:
            # -- Enable the readiness probe
            enabled: false
            # -- Set this to `true` if you wish to specify your own readinessProbe
            custom: false
            # -- sets the probe type when not using a custom probe
            # @default -- "TCP"
            type: TCP
            # -- The spec field contains the values for the default readinessProbe.
            # If you selected `custom: true`, this field holds the definition of the readinessProbe.
            # @default -- See below
            spec:
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3

          # -- Startup probe configuration
          # @default -- See below
          startup:
            # -- Enable the startup probe
            enabled: false
            # -- Set this to `true` if you wish to specify your own startupProbe
            custom: false
            # -- sets the probe type when not using a custom probe
            # @default -- "TCP"
            type: TCP
            # -- The spec field contains the values for the default startupProbe.
            # If you selected `custom: true`, this field holds the definition of the startupProbe.
            # @default -- See below
            spec:
              initialDelaySeconds: 0
              timeoutSeconds: 1
              ## This means it has a maximum of 5*30=150 seconds to start up before it fails
              periodSeconds: 5
              failureThreshold: 30

  nsadmin:
    # -- enable the controller.
    enabled: true

    # -- Set the controller type.
    # Valid options are deployment, daemonset, statefulset or cronjob
    type: deployment
    # -- Set annotations on the deployment/statefulset/daemonset/cronjob
    annotations: {}
    # -- Set labels on the deployment/statefulset/daemonset/cronjob
    labels: {}
    # -- Number of desired pods. When using a HorizontalPodAutoscaler, set this to `null`.
    replicas: 1
    # -- Set the controller upgrade strategy
    # For Deployments, valid values are Recreate (default) and RollingUpdate.
    # For StatefulSets, valid values are OnDelete and RollingUpdate (default).
    # DaemonSets/CronJobs ignore this.
    strategy: RollingUpdate

    rollingUpdate:
      # -- Set deployment RollingUpdate max unavailable
      unavailable:
      # -- Set deployment RollingUpdate max surge
      surge:
      # -- Set statefulset RollingUpdate partition
      partition:
    # -- ReplicaSet revision history limit
    revisionHistoryLimit: 3


    # -- StatefulSet configuration. Required only when using `controller.type: statefulset`.


    # Controller-specific overrides for `defaultPodOptions` keys
    pod:
      # -- Configuring the ndots option may resolve nslookup issues on some Kubernetes setups.
      dnsConfig:
        options:
          - name: ndots
            value: '0'


    containers:
      main:
        # -- Override the container name
        nameOverride:

        # -- Override the default container order
        # Containers get sorted alphanumerically by the `<order>-<identifier>` combination.
        # @default -- 99
        order: 1

        # -- Specify if this container depends on any other containers
        # This is used to determine the order in which the containers are rendered.
        # The use of "dependsOn" completely disables the "order" field within the controller.
        dependsOn: []

        image:
          # -- image repository
          repository: powerdnsadmin/pda-legacy
          # -- image tag
          tag: latest
          # -- image pull policy
          pullPolicy:

        # -- Override the command(s) for the default container
        command: []
        # -- Override the args for the default container
        args: []
        # -- Override the working directory for the default container
        workingDir:

        env:
          - name: PDNS_API_URL
            value: 'http://{{ include "bjw-s.common.lib.chart.names.fullname" $ }}-webservice.core-prod.svc.cluster.local:8081'

          - name: PDNS_API_KEY
            valueFrom:
              secretKeyRef:
                name: '{{ include "bjw-s.common.lib.chart.names.fullname" $ }}-nsadmin-api'
                key: APIKey

          - name: LDAP_ENABLED
            value: 'True'

          - name: LDAP_BASE_DN
            value: 'dc=ldap,dc=mylogin,dc=space'

          - name: LDAP_SG_ENABLED
            value: 'True'

          # - name: AUTOPROVISIONING
          #   value: 'True'

          - name: LDAP_FILTER_USERNAME
            value: 'cn'

          - name: LDAP_FILTER_GROUP
            value: '(objectClass=group)'

          - name: LDAP_FILTER_BASIC
            value: '(objectClass=user)'

          - name: LDAP_FILTER_GROUPNAME
            value: 'member'

          - name: LDAP_USER_GROUP
            value: 'cn=Network,ou=groups,dc=ldap,dc=mylogin,dc=space'

          - name: LDAP_ADMIN_GROUP
            value: 'cn=authentik Admins,ou=groups,dc=ldap,dc=mylogin,dc=space'

          - name: LDAP_URI
            valueFrom:
              secretKeyRef:
                name: '{{ include "bjw-s.common.lib.chart.names.fullname" $ }}-nsadmin-creds'
                key: ldapsURI

          - name: LDAP_ADMIN_USERNAME
            valueFrom:
              secretKeyRef:
                name: '{{ include "bjw-s.common.lib.chart.names.fullname" $ }}-nsadmin-creds'
                key: ldapsBIND

          - name: LDAP_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: '{{ include "bjw-s.common.lib.chart.names.fullname" $ }}-nsadmin-creds'
                key: password

          - name: GUNICORN_LOGLEVEL
            value: 'DEBUG'

          - name: GUNICORN_TIMEOUT
            value: '60'

          - name: GUNICORN_WORKERS
            value: '2'

          - name: SQLALCHEMY_POOL_TIMEOUT
            value: '30'

          - name: SQLALCHEMY_POOL_SIZE
            value: '10'

          - name: SQLALCHEMY_POOL_RECYCLE
            value: '100'

          - name: SQLALCHEMY_DATABASE_URI
            valueFrom:
              secretKeyRef:
                name: '{{ include "bjw-s.common.lib.chart.names.fullname" $ }}-nsadmin-creds'
                key: psqlURI

        # -- Secrets and/or ConfigMaps that will be loaded as environment variables.
        # [[ref]](https://unofficial-kubernetes.readthedocs.io/en/latest/tasks/configure-pod-container/configmap/#use-case-consume-configmap-in-environment-variables)
        #envFrom:

        # -- Probe configuration
        # -- [[ref]](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
        # @default -- See below
        probes:
          # -- Liveness probe configuration
          # @default -- See below
          liveness:
            # -- Enable the liveness probe
            enabled: false
            # -- Set this to `true` if you wish to specify your own livenessProbe
            custom: false
            # -- sets the probe type when not using a custom probe
            # @default -- "TCP"
            type: TCP
            # -- The spec field contains the values for the default livenessProbe.
            # If you selected `custom: true`, this field holds the definition of the livenessProbe.
            # @default -- See below
            spec:
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3

          # -- Redainess probe configuration
          # @default -- See below
          readiness:
            # -- Enable the readiness probe
            enabled: false
            # -- Set this to `true` if you wish to specify your own readinessProbe
            custom: false
            # -- sets the probe type when not using a custom probe
            # @default -- "TCP"
            type: TCP
            # -- The spec field contains the values for the default readinessProbe.
            # If you selected `custom: true`, this field holds the definition of the readinessProbe.
            # @default -- See below
            spec:
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3

          # -- Startup probe configuration
          # @default -- See below
          startup:
            # -- Enable the startup probe
            enabled: false
            # -- Set this to `true` if you wish to specify your own startupProbe
            custom: false
            # -- sets the probe type when not using a custom probe
            # @default -- "TCP"
            type: TCP
            # -- The spec field contains the values for the default startupProbe.
            # If you selected `custom: true`, this field holds the definition of the startupProbe.
            # @default -- See below
            spec:
              initialDelaySeconds: 0
              timeoutSeconds: 1
              ## This means it has a maximum of 5*30=150 seconds to start up before it fails
              periodSeconds: 5
              failureThreshold: 30

        # -- Set the resource requests / limits for the container.
        resources:
          ## We usually recommend not to specify default resources and to leave this as a conscious
          ## choice for the user. This also increases chances charts run on environments with little
          ## resources, such as Minikube. If you do want to specify resources, uncomment the following
          ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
          limits:
            cpu: 800m
            memory: 512Mi

          requests:
            cpu: 100m
            memory: 128Mi

        # -- Configure the Security Context for the container
        securityContext: {}

        # -- Configure the lifecycle event hooks for the container
        # -- [[ref](https://kubernetes.io/docs/tasks/configure-pod-container/attach-handler-lifecycle-event/)]
        lifecycle: {}

        # -- Configure the path at which the file to which the containers termination message will be written.
        # -- [[ref](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#lifecycle-1)]
        terminationMessagePath:

        # -- Indicate how the containers termination message should be populated.
        # Valid options are `File` and `FallbackToLogsOnError`.
        # -- [[ref](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#lifecycle-1)]
        terminationMessagePolicy:

    # -- Specify any initContainers here as dictionary items.
    # Each initContainer should have its own key
    # initContainers get sorted alphanumerically by the `<order>-<identifier>` combination
    # if no order or dependsOn has been configured for them.
    initContainers: {}

service:
  nsadmin:
    enabled: true

    controller: nsadmin

    type: ClusterIP

    primary: false

    ports:
      http:
        # -- Enables or disables the port
        enabled: true

        # -- Make this the primary port (used in probes, notes, etc...)
        # If there is more than 1 service, make sure that only 1 port is marked as primary.
        primary: true

        # -- The port number
        port: 80

        # -- Port protocol.
        # Support values are `HTTP`, `HTTPS`, `TCP` and `UDP`.
        # HTTP and HTTPS spawn a TCP service and get used for internal URL and name generation
        protocol: HTTP

        # -- Specify the appProtocol value for the Service.
        # [[ref]](https://kubernetes.io/docs/concepts/services-networking/service/#application-protocol)
        appProtocol: http


      
  webservice:
    enabled: true

    controller: main

    type: ClusterIP

    clusterIP: None

    ports:
      http:
        # -- Enables or disables the port
        enabled: true

        # -- Make this the primary port (used in probes, notes, etc...)
        # If there is more than 1 service, make sure that only 1 port is marked as primary.
        primary: false

        # -- The port number
        port: 8081

        # -- Port protocol.
        # Support values are `HTTP`, `HTTPS`, `TCP` and `UDP`.
        # HTTP and HTTPS spawn a TCP service and get used for internal URL and name generation
        protocol: HTTP

        # -- Specify the appProtocol value for the Service.
        # [[ref]](https://kubernetes.io/docs/concepts/services-networking/service/#application-protocol)
        appProtocol:

  main:
    # -- Enables or disables the service
    enabled: true

    # -- Configure which controller this service should target
    controller: main

    # -- Make this the primary service for this controller (used in probes, notes, etc...).
    # If there is more than 1 service targeting the controller, make sure that only 1 service is
    # marked as primary.
    primary: true

    # -- Set the service type
    type: LoadBalancer

    # -- Specify the externalTrafficPolicy for the service. Options: Cluster, Local
    # -- [[ref](https://kubernetes.io/docs/tutorials/services/source-ip/)]
    externalTrafficPolicy: Local

    # -- Specify the ip policy. Options: SingleStack, PreferDualStack, RequireDualStack
    ipFamilyPolicy:
    # -- The ip families that should be used. Options: IPv4, IPv6
    ipFamilies: []

    # -- Provide additional annotations which may be required.
    annotations:
      consul.hashicorp.com/service-name: ns-core

    # -- Provide additional labels which may be required.
    labels:
      wan-mode: public
      lan-mode: private

    # -- Allow adding additional match labels
    extraSelectorLabels: {}

    ports:
      http:
        # -- Enables or disables the port
        enabled: false

        # -- Make this the primary port (used in probes, notes, etc...)
        # If there is more than 1 service, make sure that only 1 port is marked as primary.
        primary: false

        # -- The port number
        port: 8080

        # -- Port protocol.
        # Support values are `HTTP`, `HTTPS`, `TCP` and `UDP`.
        # HTTP and HTTPS spawn a TCP service and get used for internal URL and name generation
        protocol: HTTP

        # -- Specify the appProtocol value for the Service.
        # [[ref]](https://kubernetes.io/docs/concepts/services-networking/service/#application-protocol)
        appProtocol:
      
      dns-udp:
        # -- Enables or disables the port
        enabled: true

        # -- Make this the primary port (used in probes, notes, etc...)
        # If there is more than 1 service, make sure that only 1 port is marked as primary.
        primary: true

        # -- The port number
        port: 53

        # -- Port protocol.
        # Support values are `HTTP`, `HTTPS`, `TCP` and `UDP`.
        # HTTP and HTTPS spawn a TCP service and get used for internal URL and name generation
        protocol: UDP

        # -- Specify the appProtocol value for the Service.
        # [[ref]](https://kubernetes.io/docs/concepts/services-networking/service/#application-protocol)
        appProtocol:

      dns-tcp:
        # -- Enables or disables the port
        enabled: true

        # -- Make this the primary port (used in probes, notes, etc...)
        # If there is more than 1 service, make sure that only 1 port is marked as primary.
        primary: false

        # -- The port number
        port: 53

        # -- Port protocol.
        # Support values are `HTTP`, `HTTPS`, `TCP` and `UDP`.
        # HTTP and HTTPS spawn a TCP service and get used for internal URL and name generation
        protocol: TCP

        # -- Specify the appProtocol value for the Service.
        # [[ref]](https://kubernetes.io/docs/concepts/services-networking/service/#application-protocol)
        appProtocol:

# -- Configure the gateway routes for the chart here.
# Additional routes can be added by adding a dictionary key similar to the 'main' route.
# [[ref]](https://gateway-api.sigs.k8s.io/references/spec/)
# @default -- See below
route:
  nsadmin:
    # -- Enables or disables the route
    enabled: true

    # -- Set the route kind
    # Valid options are GRPCRoute, HTTPRoute, TCPRoute, TLSRoute, UDPRoute
    kind: HTTPRoute

    # -- Provide additional annotations which may be required.
    annotations: {}

    # -- Provide additional labels which may be required.
    labels:
      wan-mode: 'public'
      lan-mode: 'private'


    # -- Configure the resource the route attaches to.
    parentRefs:
      - # Group of the referent resource.
        group: gateway.networking.k8s.io
        # Kind of the referent resource.
        kind: Gateway
        # Name of the referent resource
        name: main-gw
        # Namespace of the referent resource
        namespace: core-prod
        sectionName: https

    # -- Host addresses. Helm template can be passed.
    hostnames:
      - ns.int.mylogin.space

    # -- Configure rules for routing. Defaults to the primary service.
    rules:
      - matches:
          - path:
              type: PathPrefix
              value: /
        backendRefs:
          - kind: Service
            port: 80
            name: nsadmin
            weight: 1

persistence:
  config:
    enabled: true
    mountPath: /etc/pdns/pdns.conf
    subPath: pnds.conf
    type: custom
    volumeSpec:
      configMap:
        name: 'ns-core-config'

    advancedMounts:
      main: # the controller with the "main" identifier
        main: # the container with the "main" identifier
          - path: /etc/pdns/pdns.conf
            readOnly: true
            subPath: pdns.conf


  configs:
    enabled: true
    mountPath: /etc/pdns/conf.d
    type: custom
    volumeSpec:
      secret:
        secretName: 'ns-core-secrets'

        items:
          - key: web.conf
            path: web.conf

    advancedMounts:
      main: # the controller with the "main" identifier
        main: # the container with the "main" identifier
          - path: /etc/pdns/conf.d/web.conf
            subPath: web.conf


configMaps:
  config:
    # -- Enables or disables the configMap
    enabled: true
    # -- Labels to add to the configMap
    labels: {}
    # -- Annotations to add to the configMap
    annotations: {}
    # -- configMap data content. Helm template enabled.
    data:
      pdns.conf: | # shell
        # cache-ttl     Seconds to store packets in the PacketCache
        cache-ttl=60

        # config-dir    Location of configuration directory (pdns.conf)
        config-dir=/etc/pdns

        include-dir=/etc/pdns/conf.d

        # daemon        Operate as a daemon
        daemon=no

        # default-soa-name      name to insert in the SOA record if none set in the backend
        # default-soa-name=a.misconfigured.powerdns.server

        # default-ttl   Seconds a result is valid if not set otherwise
        # default-ttl=3600

        # disable-axfr  Disable zonetransfers but do allow TCP queries
        disable-axfr=no

        # disable-tcp   Do not listen to TCP queries
        # disable-tcp=no

        # distributor-threads   Default number of Distributor (backend) threads to start
        distributor-threads=1

        # do-ipv6-additional-processing Do AAAA additional processing
        # do-ipv6-additional-processing=no

        # fancy-records Process URL and MBOXFW records
        # fancy-records=no

        # guardian      Run within a guardian process
        guardian=yes

        # launch        Which backends to launch and order to query them in
        launch=gpgsql

        # load-modules  Load this module - supply absolute or relative path
        load-modules=libgpgsqlbackend.so

        # local-address Local IP addresses to which we bind
        local-address=0.0.0.0

        # local-ipv6    Local IP address to which we bind
        # local-ipv6=

        # local-port    The port on which we listen
        local-port=53

        # log-dns-details       If PDNS should log DNS non-erroneous details
        # log-dns-details=

        # log-failed-updates    If PDNS should log failed update requests
        # log-failed-updates=

        # logfile       Logfile to use (Windows only)
        # logfile=pdns.log

        # logging-facility      Log under a specific facility
        # logging-facility=

        # loglevel      Amount of logging. Higher is more. Do not set below 3
        loglevel=3

        # max-queue-length      Maximum queuelength before considering situation lost
        # max-queue-length=5000

        # max-tcp-connections   Maximum number of TCP connections
        # max-tcp-connections=10

        # module-dir    Default directory for modules
        # module-dir=/usr/lib/pdns

        # negquery-cache-ttl    Seconds to store packets in the PacketCache
        negquery-cache-ttl=60

        # no-shuffle    Set this to prevent random shuffling of answers - for regression testing
        # no-shuffle=off

        # out-of-zone-additional-processing     Do out of zone additional processing
        # out-of-zone-additional-processing=yes

        # pipebackend-abi-version       Version of the pipe backend ABI
        # pipebackend-abi-version=1

        # query-cache-ttl       Seconds to store packets in the PacketCache
        # query-cache-ttl=20

        # query-local-address   Source IP address for sending queries
        # query-local-address=

        # query-logging Hint backends that queries should be logged
        # query-logging=no

        # queue-limit   Maximum number of milliseconds to queue a query
        # queue-limit=1500


        # send-root-referral    Send out old-fashioned root-referral instead of ServFail in case of no authority
        # send-root-referral=no

        # setgid        If set, change group id to this gid for more security
        setgid=pdns

        # setuid        If set, change user id to this uid for more security
        setuid=pdns

        # skip-cname    Do not perform CNAME indirection for each query
        # skip-cname=no

        # slave Act as a slave
        # slave=no

        # slave-cycle-interval  Reschedule failed SOA serial checks once every .. seconds
        # slave-cycle-interval=60

        # smtpredirector        Our smtpredir MX host
        # smtpredirector=a.misconfigured.powerdns.smtp.server

        # soa-expire-default    Default SOA expire
        # soa-expire-default=604800

        # soa-minimum-ttl       Default SOA mininum ttl
        # soa-minimum-ttl=3600

        # soa-refresh-default   Default SOA refresh
        # soa-refresh-default=10800

        # soa-retry-default     Default SOA retry
        # soa-retry-default=3600

        # soa-serial-offset     Make sure that no SOA serial is less than this number
        # soa-serial-offset=0

        # socket-dir    Where the controlsocket will live
        socket-dir=/var/run

        # strict-rfc-axfrs      Perform strictly rfc compliant axfrs (very slow)
        # strict-rfc-axfrs=no

        # trusted-notification-proxy    IP address of incoming notification proxy
        # trusted-notification-proxy=

        # urlredirector Where we send hosts to that need to be url redirected
        # urlredirector=127.0.0.1

        # version-string        PowerDNS version in packets - full, anonymous, powerdns or custom
        version-string=anonymous

        # webserver     Start a webserver for monitoring
        webserver=yes

        # webserver-address     IP Address of webserver to listen on
        # webserver-address=127.0.0.1

        # webserver-password    Password required for accessing the webserver
        # webserver-password=

        # webserver-print-arguments     If the webserver should print arguments
        # webserver-print-arguments=no

        # wildcard-url  Process URL and MBOXFW records
        # wildcard-url=no
        gpgsql-dnssec=
        allow-axfr-ips=172.16.0.0/12,10.0.0.0/8
        allow-dnsupdate-from=172.16.0.0/12,10.0.0.0/8
        also-notify=10.1.1.50,10.1.1.53

        webserver=yes
        webserver-address=0.0.0.0
        webserver-allow-from=0.0.0.0/0
        # webserver-port        Port of webserver to listen on
        webserver-port=8081

        default-soa-content=ns.resolvemy.host bots.@ 0 300 60 600 300
        dnsupdate=yes
        expand-alias=yes
        forward-dnsupdate=yes
        forward-notify=10.1.1.50,10.1.1.53
        primary=yes

# -- Configure persistence for the chart here.
# Additional items can be added by adding a dictionary key similar to the 'config' key.
# [[ref]](https://bjw-s.github.io/helm-charts/docs/common-library/common-library-storage)
# @default -- See below
