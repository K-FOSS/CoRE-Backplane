{{- if .Values.netmaker.server.enabled }}
{{- $fullName := include "pnetwork.fullname" . -}}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: {{ $fullName }}

    app.kubernetes.io/name: netmaker
    app.kubernetes.io/component: server

    {{- with .Values.netmaker.server.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}

  {{- with .Values.netmaker.server.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  
  name: {{ $fullName }}-nm-srv

spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ $fullName }}

      app.kubernetes.io/name: netmaker
      app.kubernetes.io/component: server

  serviceName: {{ $fullName }}-netmaker-server-wg

  podManagementPolicy: Parallel

  minReadySeconds: 60
  replicas: {{ .Values.netmaker.server.replicaCount }}

  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ $fullName }}
        app.kubernetes.io/name: netmaker
        app.kubernetes.io/component: server

        {{- with .Values.netmaker.server.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}

      {{- with .Values.netmaker.server.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

    spec:
      {{- with .Values.netmaker.server.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.netmaker.server.tolerations }}
      tolerations:
      {{- toYaml . | nindent 6 }}
      {{- end }}

      volumes:
        - name: test-volume
          emptyDir: {}

        - name: frr-tmp
          emptyDir: {}

        - name: frr-config
          configMap:
            name: {{ $fullName }}-nm-frr-config
            defaultMode: 0755
            items:
              - key: frr.conf
                path: frr.conf

              - key: daemons
                path: daemons

        - name: config-vol
          configMap:
            name: {{ $fullName }}-netmaker-server-config
            defaultMode: 0755
            items:
              - key: mosquitto.conf
                path: mosquitto.conf

              - key: wait.sh
                path: wait.sh

      containers:
        - name: netmaker-server

          {{- with .Values.netmaker.server.image }}
          image: '{{ .repository }}{{ if .digest }}@{{ .digest }}{{ else }}:{{ .tag }}{{ end }}'
          imagePullPolicy: {{ .pullPolicy }}
          {{- end }}

          args: []

          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              - SYS_MODULE
      
          volumeMounts:
            - mountPath: /etc/netmaker
              name: test-volume

          resources:
            {{- toYaml .Values.netmaker.server.resources | nindent 12 }}

          env:
            - name: PLATFORM
              value: Kubernetes

            - name: K8s
              value: 'true'

            - name: BROKER_ENDPOINT
              value: 'mqtts://mqtt.mylogin.space:8443'

            - name: SERVER_NAME
              value: '{{ .Values.netmaker.domain }}'

            - name: FRONTEND_URL
              value: https://{{ .Values.netmaker.domain }}

            - name: SERVER_API_CONN_STRING
              value: {{ .Values.netmaker.domain }}:443

            - name: CORS_ALLOWED_ORIGIN
              value: '*'

            - name: SERVER_HTTP_HOST
              value: {{ .Values.netmaker.domain }}

            - name: SERVER_HOST
              value: '66.165.222.102'

            - name: API_PORT
              value: '8080'

            - name: REST_BACKEND
              value: 'on'

            - name: AGENT_BACKEND
              value: 'on'

            - name: CLIENT_MODE
              value: 'on'

            - name: NODE_ID
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name

            - name: MESSAGEQUEUE_BACKEND
              value: 'on'

            - name: MANAGE_IPTABLES
              value: 'off'

            - name: HOST_NETWORK
              value: 'off'

            - name: DNS_MODE
              value: 'off'

            - name: MQ_HOST
              value: 'mqtt.mylogin.space'

            - name: SERVER_BROKER_ENDPOINT
              value: 'mqtts://mqtt.mylogin.space:8443'

            - name: MQ_SERVER_PORT
              value: '8443'

            - name: MQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}-netmaker-creds
                  key: username
                  optional: false

            - name: MQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}-netmaker-creds
                  key: password
                  optional: false

            - name: DISPLAY_KEYS
              value: 'on'

            

            #
            # Auth
            #
            - name: AUTH_PROVIDER
              value: oidc

            - name: OIDC_ISSUER
              value: https://idp.mylogin.space/application/o/netmaker/

            - name: CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}-netmaker-oidc
                  key: OIDCClientID
                  optional: false

            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}-netmaker-oidc
                  key: OIDCClientSecret
                  optional: false


            
            #
            # Database
            #

            - name: DATABASE
              value: postgres

            - name: SQL_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}-netmaker-creds
                  key: psqlHostname
                  optional: false

            - name: SQL_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}-netmaker-creds
                  key: psqlPort
                  optional: false

            - name: SQL_DB
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}-netmaker-creds
                  key: database
                  optional: false

            - name: SQL_USER
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}-netmaker-creds
                  key: username
                  optional: false

            - name: SQL_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}-netmaker-creds
                  key: password
                  optional: false


          ports:
            - containerPort: 8080
              name: http

            - containerPort: 50051
              name: grpc-agent


            {{ range untilStep (.Values.netmaker.server.wireguard.min|int) (.Values.netmaker.server.wireguard.max|int) 1 }}
            - name: 'udp-{{ . }}'
              containerPort: {{ . }}
              protocol: UDP

            - name: 'tcp-{{ . }}'
              containerPort: {{ . }}
              protocol: TCP
            {{ end }}

        - name: frr
          image: frrouting/frr:v8.3.1

          securityContext:
            allowPrivilegeEscalation: true
            privileged: true

          volumeMounts:
            - mountPath: /etc/frr
              name: frr-tmp

            - name: frr-config
              mountPath: /etc/frr/daemons
              
              subPath: daemons

            - name: frr-config
              mountPath: /etc/frr/frr.conf
              
              subPath: frr.conf

          ports:
            - containerPort: 179
              name: bgp

        {{- with .Values.netmaker.server.sidecars }}
        {{- toYaml . | nindent 8 }}
        {{- end }}

      securityContext:
        seccompProfile:
          type: RuntimeDefault

{{- end }}
