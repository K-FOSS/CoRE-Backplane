---
{{- include "bjw-s.common.loader.init" . }}

{{- define "app-template.hardcodedValues" -}}
# Set the nameOverride based on the release name if no override has been set
{{ if not .Values.global.nameOverride }}
global:
  nameOverride: "{{ .Release.Name }}"

{{ end }}

controllers:

{{/* $. is the top-level context.
     $name  -> "rs0", "rs1", ...
     $rs    -> the whole rs0/rs1 map (ipAddress, peers, peerGroups â€¦) */}}
{{- range $name, $rs := .Values.routeservers }}
  {{ $name }}-routeserver:
    # For Deployments, valid values are Recreate (default) and RollingUpdate.
    # For StatefulSets, valid values are OnDelete and RollingUpdate (default).
    # DaemonSets/CronJobs ignore this.
    strategy: RollingUpdate

    nameOverride: {{ $name }}

    containers:
      frr:
        image:
          repository: frrouting/frr
          #
          # TODO: Get Renovate or similar managing this
          #
          tag: {{ if and $rs.frr $rs.frr.version }}{{ $rs.frr.version }} test {{ else }}{{ $.Values.frr.defaultVersion }}aaa{{ end }}
          pullPolicy: IfNotPresent

        securityContext:
          seLinuxOptions: {}
          privileged: false
          allowPrivilegeEscalation: false
          runAsNonRoot: false
          readOnlyRootFilesystem: false
          seccompProfile:
            type: "RuntimeDefault"
          capabilities:
            add: 
              - 'NET_ADMIN'
              - 'SYS_ADMIN'

        # -- Probe configuration
        # -- [[ref]](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
        # @default -- See below
        probes:
          # -- Liveness probe configuration
          # @default -- See below
          liveness:
            # -- Enable the liveness probe
            enabled: false
            # -- Set this to `true` if you wish to specify your own livenessProbe
            custom: false
            # -- sets the probe type when not using a custom probe
            # @default -- "TCP"
            type: TCP
            # -- The spec field contains the values for the default livenessProbe.
            # If you selected `custom: true`, this field holds the definition of the livenessProbe.
            # @default -- See below
            spec:
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3

          # -- Redainess probe configuration
          # @default -- See below
          readiness:
            # -- Enable the readiness probe
            enabled: false
            # -- Set this to `true` if you wish to specify your own readinessProbe
            custom: false
            # -- sets the probe type when not using a custom probe
            # @default -- "TCP"
            type: TCP
            # -- The spec field contains the values for the default readinessProbe.
            # If you selected `custom: true`, this field holds the definition of the readinessProbe.
            # @default -- See below
            spec:
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3

          # -- Startup probe configuration
          # @default -- See below
          startup:
            # -- Enable the startup probe
            enabled: false
            # -- Set this to `true` if you wish to specify your own startupProbe
            custom: false
            # -- sets the probe type when not using a custom probe
            # @default -- "TCP"
            type: TCP
            # -- The spec field contains the values for the default startupProbe.
            # If you selected `custom: true`, this field holds the definition of the startupProbe.
            # @default -- See below
            spec:
              initialDelaySeconds: 0
              timeoutSeconds: 1
              ## This means it has a maximum of 5*30=150 seconds to start up before it fails
              periodSeconds: 5
              failureThreshold: 30

{{- end }}


service:
  {{- range $name, $rs := .Values.routeservers }}
  {{ $name }}-bgp:
    # -- Enables or disables the service
    enabled: true

    # -- Configure which controller this service should target
    controller: {{ $name }}-routeserver

    # -- Make this the primary service for this controller (used in probes, notes, etc...).
    # If there is more than 1 service targeting the controller, make sure that only 1 service is
    # marked as primary.
    primary: false

    # -- Set the service type
    type: LoadBalancer

    # -- Specify the externalTrafficPolicy for the service. Options: Cluster, Local
    # -- [[ref](https://kubernetes.io/docs/tutorials/services/source-ip/)]
    externalTrafficPolicy:

    # -- Specify the ip policy. Options: SingleStack, PreferDualStack, RequireDualStack
    ipFamilyPolicy:
    # -- The ip families that should be used. Options: IPv4, IPv6
    ipFamilies: []

    # # -- Provide additional annotations which may be required.
    annotations:
      purelb.io/allow-local: 'true'
      purelb.io/addresses: '{{ $rs.ipAddress }}'

    # -- Allow adding additional match labels
    extraSelectorLabels: {}

    ports:
      turn-tcp:
        # -- Enables or disables the port
        enabled: true

        # -- Make this the primary port (used in probes, notes, etc...)
        # If there is more than 1 service, make sure that only 1 port is marked as primary.
        primary: false

        # -- The port number
        port: 179

        # -- Port protocol.
        # Support values are `HTTP`, `HTTPS`, `TCP` and `UDP`.
        # HTTP and HTTPS spawn a TCP service and get used for internal URL and name generation
        protocol: TCP

        # -- Specify the appProtocol value for the Service.
        # [[ref]](https://kubernetes.io/docs/concepts/services-networking/service/#application-protocol)
        appProtocol:
  {{- end }}

configMaps:
configMaps:
  frrconfig:
    enabled: true

    data:

      {{- range $name, $rs := .Values.routeservers }}
      {{ $name }}-daemons: |
        # This file tells the frr package which daemons to start.
        #
        # Sample configurations for these daemons can be found in
        # /usr/share/doc/frr/examples/.
        #
        # ATTENTION:
        #
        # When activating a daemon for the first time, a config file, even if it is
        # empty, has to be present *and* be owned by the user and group "frr", else
        # the daemon will not be started by /etc/init.d/frr. The permissions should
        # be u=rw,g=r,o=.
        # When using "vtysh" such a config file is also needed. It should be owned by
        # group "frrvty" and set to ug=rw,o= though. Check /etc/pam.d/frr, too.
        #
        # The watchfrr, zebra and staticd daemons are always started.
        #
        bgpd={{ if and $rs.bgp $rs.bgp.enabled }}{{ $rs.bgp.enabled }}{{ else }}false{{ end }}
        ospfd=no
        ospf6d=no
        ripd=no
        ripngd=no
        isisd=no
        pimd=no
        ldpd=no
        nhrpd=no
        eigrpd=no
        babeld=no
        sharpd=no
        pbrd=no
        bfdd=no
        fabricd=no
        vrrpd=no
        pathd=no

        #
        # If this option is set the /etc/init.d/frr script automatically loads
        # the config via "vtysh -b" when the servers are started.
        # Check /etc/pam.d/frr if you intend to use "vtysh"!
        #
        vtysh_enable=yes
        zebra_options="  -A 127.0.0.1 -s 90000000"
        bgpd_options="--no_kernel -A 127.0.0.1"
        ospfd_options="  -A 127.0.0.1"
        ospf6d_options=" -A ::1"
        ripd_options="   -A 127.0.0.1"
        ripngd_options=" -A ::1"
        isisd_options="  -A 127.0.0.1"
        pimd_options="   -A 127.0.0.1"
        ldpd_options="   -A 127.0.0.1"
        nhrpd_options="  -A 127.0.0.1"
        eigrpd_options=" -A 127.0.0.1"
        babeld_options=" -A 127.0.0.1"
        sharpd_options=" -A 127.0.0.1"
        pbrd_options="   -A 127.0.0.1"
        staticd_options="-A 127.0.0.1"
        bfdd_options="   -A 127.0.0.1"
        fabricd_options="-A 127.0.0.1"
        vrrpd_options="  -A 127.0.0.1"
        pathd_options="  -A 127.0.0.1"

        # configuration profile
        #
        #frr_profile="traditional"
        #frr_profile="datacenter"

        #
        # This is the maximum number of FD's that will be available.
        # Upon startup this is read by the control files and ulimit
        # is called.  Uncomment and use a reasonable value for your
        # setup if you are expecting a large number of peers in
        # say BGP.
        #MAX_FDS=1024

        # The list of daemons to watch is automatically generated by the init script.
        #watchfrr_options=""

        # To make watchfrr create/join the specified netns, use the following option:
        #watchfrr_options="--netns"
        # This only has an effect in /etc/frr/<somename>/daemons, and you need to
        # start FRR with "/usr/lib/frr/frrinit.sh start <somename>".

        # for debugging purposes, you can specify a "wrap" command to start instead
        # of starting the daemon directly, e.g. to use valgrind on ospfd:
        #   ospfd_wrap="/usr/bin/valgrind"
        # or you can use "all_wrap" for all daemons, e.g. to use perf record:
        #   all_wrap="/usr/bin/perf record --call-graph -"
        # the normal daemon command is added to this at the end.



      {{ $name }}-frr.conf: |
        # default to using syslog. /etc/rsyslog.d/45-frr.conf places the log in
        # /var/log/frr/frr.log
        #
        # Note:
        # FRR's configuration shell, vtysh, dynamically edits the live, in-memory
        # configuration while FRR is running. When instructed, vtysh will persist the
        # live configuration to this file, overwriting its contents. If you want to
        # avoid this, you can edit this file manually before starting FRR, or instruct
        # vtysh to write configuration to a different file.
        log syslog informational
        !
        ip prefix-list ADV seq 1 permit any
        !
        debug bgp neighbor-events
        !
        ip nht resolve-via-default
        !
        route-map OUT permit 10
          match ip address prefix-list ADV
        exit
        !
        router bgp 64567
          bgp router-id {{ $rs.ipAddress }}
          no bgp ebgp-requires-policy
          bgp disable-ebgp-connected-route-check
          bgp bestpath peer-type multipath-relax
          bgp graceful-restart stalepath-time 300
          {{- range $peerGroupIndex, $peerGroup := $rs.peerGroups }}
          neighbor {{ $peerGroup.name }} peer-group
          neighbor {{ $peerGroup.name }} remote-as {{ $peerGroup.asn }}
          {{- end }}
          neighbor cilium peer-group
          neighbor cilium ebgp-multihop 6
          neighbor cilium remote-as 64512
          neighbor WAN-RT peer-group
          neighbor WAN-RT remote-as internal
          neighbor routeserver peer-group
          neighbor routeserver remote-as internal
          neighbor tunneler peer-group
          neighbor tunneler remote-as 64513
          neighbor 172.31.241.237 peer-group WAN-RT
          neighbor 172.31.243.1 peer-group routeserver
          bgp listen range 172.31.241.0/24 peer-group cilium
          bgp listen range 172.16.20.0/24 peer-group cilium
          bgp listen range 172.20.56.0/22 peer-group tunneler
          !
          address-family ipv4 unicast
            maximum-paths 64
            maximum-paths ibgp 64
            neighbor tunneler activate
            neighbor WAN-RT route-reflector-client
            neighbor WAN-RT attribute-unchanged next-hop
            neighbor WAN-RT soft-reconfiguration inbound
            neighbor cilium soft-reconfiguration inbound
            neighbor routeserver soft-reconfiguration inbound
          exit-address-family
        exit
        !
        end
      {{- end }}



persistence:
  frrconfig:
    enabled: true

    type: configMap

    name: '{{ include "bjw-s.common.lib.chart.names.fullname" $ }}-frrconfig'

    defaultMode: 0755

    advancedMounts:
      {{- range $name, $rs := .Values.routeservers }}

      {{ $name }}-routeserver: # the controller with the "main" identifier
        frr: # the container with the "main" identifier
          - path: /etc/frr/frr.conf
            readOnly: true
            subPath: {{ $name }}-frr.conf

          - path: /etc/frr/daemons
            readOnly: true
            subPath: {{ $name }}-daemons

      {{- end }}


{{- end -}}
{{- $_ := mergeOverwrite .Values (include "app-template.hardcodedValues" . | fromYaml) -}}

{{/* Render the templates */}}
{{ include "bjw-s.common.loader.generate" . }}