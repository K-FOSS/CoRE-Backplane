
apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
kind: TalosControlPlane
metadata:
  name: talos-cp
spec:
  version: v1.32.2
  replicas: 2

  rolloutStrategy:
    type: OnDelete

  infrastructureTemplate:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: TinkerbellMachineTemplate
    name: kub-poc-control-plane
    namespace: core-prod

  controlPlaneConfig:
    controlplane:
      generateType: controlplane
      talosVersion: v1.9
      configPatches:
        - op: replace
          path: /debug
          value: true

        - op: replace
          path: /machine/install/disk
          value: /dev/sda

        - op: replace
          path: /machine/features/kubePrism/enabled
          value: false

        #
        # Longhorn Requirements
        #
        - op: add
          path: /machine/kubelet/extraMounts
          value:
            - destination: /var/lib/longhorn
              type: bind
              source: /var/lib/longhorn
              options:
                - bind
                - rshared
                - rw

        - op: add
          path: /machine/sysctls
          value:
            vm.nr_hugepages: '1024'

        - op: add
          path: /machine/kernel
          value:
            modules:
              - name: nvme_tcp
              - name: vfio_pci

        #
        # OIDC For API Server
        #
        - op: add
          path: /machine/files
          value:
            - path: /var/kubernetes/auth-config.yaml
              permissions: 0o644
              op: create
              content: |- # yaml
                apiVersion: apiserver.config.k8s.io/v1beta1
                kind: AuthenticationConfiguration
                jwt:
                  - issuer:
                      url: https://idp.mylogin.space/application/o/che/
                      audiences:
                        - <path:CORE0_SITE1/data/IDE/Che/Authentik#ClientID>
                    claimMappings:
                      username:
                        expression: 'claims.preferred_username'
                      groups:
                        expression: 'claims.groups'
                      uid:
                        expression: 'claims.sub'
                    userValidationRules:
                      - expression: "!user.username.startsWith('system:')" # the expression will evaluate to true, so validation will succeed.
                        message: 'username cannot used reserved system: prefix'

                  - issuer:
                      url: https://idp.mylogin.space/application/o/headlamp/
                      audiences:
                        - headlamp
                    claimMappings:
                      username:
                        expression: 'claims.preferred_username'
                      groups:
                        expression: 'claims.groups'
                      uid:
                        expression: 'claims.sub'
                    userValidationRules:
                      - expression: "!user.username.startsWith('system:')" # the expression will evaluate to true, so validation will succeed.
                        message: 'username cannot used reserved system: prefix'

        - op: add
          path: /cluster/apiServer/extraVolumes
          value:
            - hostPath: /var/kubernetes/auth-config.yaml
              mountPath: /var/kubernetes/auth-config.yaml
              readonly: true

        - op: add
          path: /cluster/apiServer/extraArgs
          value:
            authentication-config: /var/kubernetes/auth-config.yaml

        #
        # Do not install any CNI by default, ArgoCD will automatically install the Network Base chart
        #
        - op: replace
          path: /cluster/network/cni
          value:
            name: none

        #
        # Cilium from the network base stack is running in KubeProxy replacement mode
        #
        - op: replace
          path: /cluster/proxy/disabled
          value: true

        #
        # Configure Remote Pullthrough Registry Cache
        #
        - op: add
          path: /machine/registries
          value:
            mirrors:
              docker.io:
                endpoints:
                  - https://registry.writemy.codes/v2/proxy-docker.io
                overridePath: true

              ghcr.io:
                endpoints:
                  - https://registry.writemy.codes/v2/proxy-ghcr.io
                overridePath: true

              gcr.io:
                endpoints:
                  - https://registry.writemy.codes/v2/proxy-gcr.io
                overridePath: true

              registry.k8s.io:
                endpoints:
                  - https://registry.writemy.codes/v2/proxy-registry.k8s.io
                overridePath: true
