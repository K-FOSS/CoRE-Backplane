1nameOverride: ""
fullnameOverride: ""

image: eqalpha/keydb:x86_64_v6.2.2
imagePullPolicy: IfNotPresent

externalNodes: []

password: ""
existingSecret: ""
existingSecretPasswordKey: "password"
port: 6379

clusterMode: false

threads: 8

multiMaster: "no"
activeReplicas: "yes"
protectedMode: "no"
appendonly: "no"

annotations: {}

configExtraArgs: []
  # - somesimple: "argument"
  # - client-output-buffer-limit: ["normal", "0", "0", "0"]
  # - client-output-buffer-limit: ["replica", "268435456", "67108864", "60"]
  # - client-output-buffer-limit: ["pubsub", "33554432", "8388608", "60"]

podAnnotations: {}

tolerations: {}
  # - effect: NoSchedule
  #   key: key
  #   operator: Equal
  #   value: value

nodeSelector:
  kubernetes.io/hostname: 'nuc1'
  # topology.kubernetes.io/region: some-region

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - '{{ include "keydb.name" . }}'
          - key: app.kubernetes.io/instance
            operator: In
            values:
            - '{{ .Release.Name }}'
        topologyKey: "kubernetes.io/hostname"

additionalAffinities: {}
  # nodeAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     nodeSelectorTerms:
  #       - matchExpressions:
  #         - key: node_pool
  #           operator: In
  #           values: somenodepool

# Additional init containers
extraInitContainers: []

# Additional sidecar containers
extraContainers: []
# - name: backup
#   image: minio/mc:latest

# Volumes that can be used in init and sidecar containers
extraVolumes: []
#  - name: volume-from-secret
#    secret:
#      secretName: secret-to-mount
#  - name: empty-dir-volume
#    emptyDir: {}

# Liveness Probe
livenessProbe:
  enabled: true
  custom: {}
  #  tcpSocket:
  #    port: keydb
  #  initialDelaySeconds: 30
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 10
  successThreshold: 1
  failureThreshold: 10

# Readiness Probe
readinessProbe:
  enabled: true
  custom: {}
  #  tcpSocket:
  #    port: keydb
  #  initialDelaySeconds: 30
  initialDelaySeconds: 60
  periodSeconds: 15
  timeoutSeconds: 2
  successThreshold: 1
  failureThreshold: 5

# Startup Probe
startupProbe:
  enabled: false
  custom: {}
  #  tcpSocket:
  #    port: keydb
  periodSeconds: 5
  timeoutSeconds: 1
  failureThreshold: 24

# Lifecycle Hooks
lifecycle:
  preStop:
    exec:
      command:
        - /usr/local/bin/keydb-cli
        - SHUTDOWN

persistentVolume:
  enabled: true
  accessModes:
    - ReadWriteOnce
  selector: {}
    # matchLabels:
    #   release: "stable"
    # matchExpressions:
    #   - {key: environment, operator: In, values: [dev]}
  size: 50Gi

  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"

resources: {}

# Please read https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/#enabling-unsafe-sysctls
# before sysctls setup
securityContext: {}
  # sysctls:
  # - name: net.core.somaxconn
  #   value: "512"
  # - name: vm.overcommit_memory
  #   value: "1"

service:
  annotations: {}

loadBalancer:
  enabled: false

  # annotations:
  #   service.beta.kubernetes.io/aws-load-balancer-type: nlb
  annotations: {}

  # extraSpec:
  #   loadBalancerIP: "1.2.3.4"
  #   loadBalancerSourceRanges:
  #   - 1.2.3.4/32
  extraSpec: {}

# Prometheus-operator ServiceMonitor
serviceMonitor:
  # Redis exporter must also be enabled
  enabled: true
  labels:
    resolvemy.host/metrics: mimir
  annotations:
  interval: 1m
  # scrapeTimeout: 20s

# Redis exporter
exporter:
  enabled: true
  image: oliver006/redis_exporter:v1.31.4-alpine
  pullPolicy: IfNotPresent

  # Prometheus port & scrape path
  port: 9121
  scrapePath: /metrics

  # Liveness Probe
  livenessProbe:
    httpGet:
      path: /health
      port: 9121

  # Readiness Probe
  readinessProbe:
    httpGet:
      path: /health
      port: 9121

  # Startup Probe
  startupProbe:
    httpGet:
      path: /health
      port: 9121
    failureThreshold: 24
    periodSeconds: 5

  # CPU/Memory resource limits/requests
  resources: {}

  # Additional args for redis exporter
  extraArgs: []
    # - somesimple: "argument"
    # - client-output-buffer-limit: ["normal", "0", "0", "0"]
    # - client-output-buffer-limit: ["replica", "268435456", "67108864", "60"]
    # - client-output-buffer-limit: ["pubsub", "33554432", "8388608", "60"]

scripts:
  enabled: true
  # CPU/Memory resource limits/requests
  resources: {}
  cleanupCoredumps:
    enabled: false
    minutes: 1440
  cleanupTempfiles:
    enabled: true
    minutes: 60
