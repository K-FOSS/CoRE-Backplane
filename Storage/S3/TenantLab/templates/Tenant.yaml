{{- include "bjw-s.common.loader.init" . }}

{{- define "app-template.hardcodedValues" -}}
# Set the nameOverride based on the release name if no override has been set
{{ if not .Values.global.nameOverride }}
global:
  nameOverride: "{{ .Release.Name }}"
{{ end }}

controllers:
  s3:
    # For Deployments, valid values are Recreate (default) and RollingUpdate.
    # For StatefulSets, valid values are OnDelete and RollingUpdate (default).
    # DaemonSets/CronJobs ignore this.
    strategy: RollingUpdate

    containers:
      minio:
        image:
          repository: minio/minio
          tag: RELEASE.2024-11-07T00-52-20Z
          pullPolicy: Always

        env:
          {{- nindent 10 (include "s3-env" $) }}

        # -- Probe configuration
        # -- [[ref]](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
        # @default -- See below
        probes:
          # -- Liveness probe configuration
          # @default -- See below
          liveness:
            # -- Enable the liveness probe
            enabled: false
            # -- Set this to `true` if you wish to specify your own livenessProbe
            custom: false
            # -- sets the probe type when not using a custom probe
            # @default -- "TCP"
            type: HTTP
            # -- The spec field contains the values for the default livenessProbe.
            # If you selected `custom: true`, this field holds the definition of the livenessProbe.
            # @default -- See below
            spec:
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3

          # -- Redainess probe configuration
          # @default -- See below
          readiness:
            # -- Enable the readiness probe
            enabled: false
            # -- Set this to `true` if you wish to specify your own readinessProbe
            custom: false
            # -- sets the probe type when not using a custom probe
            # @default -- "TCP"
            type: HTTP
            # -- The spec field contains the values for the default readinessProbe.
            # If you selected `custom: true`, this field holds the definition of the readinessProbe.
            # @default -- See below
            spec:
              exec:
                command:
                  - /Healthcheck.sh
              failureThreshold: 6
              initialDelaySeconds: 5
              periodSeconds:  30
              timeoutSeconds: 10

          # -- Startup probe configuration
          # @default -- See below
          startup:
            # -- Enable the startup probe
            enabled: false
            # -- Set this to `true` if you wish to specify your own readinessProbe
            custom: false
            # -- sets the probe type when not using a custom probe
            # @default -- "TCP"
            type: EXEC
            # -- The spec field contains the values for the default readinessProbe.
            # If you selected `custom: true`, this field holds the definition of the readinessProbe.
            # @default -- See below
            spec:
              exec:
                command:
                  - /Healthcheck.sh
              failureThreshold: 30
              initialDelaySeconds: 15
              periodSeconds:  10
              timeoutSeconds: 10


service:
  s3:
    enabled: true

    controller: s3

    type: ClusterIP

    primary: true

    ports:
      http:
        # -- Enables or disables the port
        enabled: true

        # -- Make this the primary port (used in probes, notes, etc...)
        # If there is more than 1 service, make sure that only 1 port is marked as primary.
        primary: true

        # -- The port number
        port: 80

        # -- Port protocol.
        # Support values are `HTTP`, `HTTPS`, `TCP` and `UDP`.
        # HTTP and HTTPS spawn a TCP service and get used for internal URL and name generation
        protocol: HTTP

        # -- Specify the appProtocol value for the Service.
        # [[ref]](https://kubernetes.io/docs/concepts/services-networking/service/#application-protocol)
        appProtocol: http


{{- end -}}
{{- $_ := mergeOverwrite .Values (include "app-template.hardcodedValues" . | fromYaml) -}}


{{- if lt (int .Values.s3.replicas) 3 }}
{{/* Render the templates */}}
{{ include "bjw-s.common.loader.generate" . }}
{{- else }}
apiVersion: minio.min.io/v2
kind: Tenant
metadata:
  name: {{ .Release.Name }}

scheduler:
  name: ""
spec:
  configuration:
    name: {{ .Release.Name }}-config

  imagePullSecret: {}

  mountPath: /export
  features:
    bucketDNS: true
    enableSFTP: false
    domains:
      minio:
        - s3.mylogin.space

  pools:
    - name: pool-0

      resources:
        requests:
          cpu: 64m
          memory: 512Mi

      servers: {{ .Values.s3.replicas }}

      volumeClaimTemplate:
        metadata:
          name: data
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: '322122547200'
      volumesPerServer: 1

  priorityClassName: tier2-priority

  env:
    {{- nindent 4 (include "s3-env" $) }}

  prometheusOperator: false
  # prometheus:
  #   diskCapacityGB: 20
  #   resources: {}
  #   securityContext:
  #     fsGroup: 1000
  #     runAsGroup: 1000
  #     runAsNonRoot: true
  #     runAsUser: 1000

  requestAutoCert: false
{{- end }}