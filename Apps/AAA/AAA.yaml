apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: core-backplane-aaa-deploy
  namespace: argocd

  annotations:
    argocd.argoproj.io/sync-wave: '20'

spec:
  goTemplate: true
  # goTemplateOptions:
  #   - 'missingkey=error'
  generators:
    - merge:
        mergeKeys:
          - name

        generators:
          - list:
              elements:
                - name: core-dc1-talos-prod
                  values:
                    hub: true

                - name: core-home1-talos-prod
                  values:
                    hub: false

          - clusters:
              selector:
                matchLabels:
                  mylogin.space/tenant: 'core.mylogin.space'
                  resolvemy.host/computetype: 'baremetal'
                  resolvemy.host/nodetype: 'infra'
              values:
                clusterName: '{{ .name }}'
                environment: 'prod'
                clusterDomain: '{{ index .metadata.labels "cluster.kubernetes.io/domain" }}'
                tenant: '{{ index .metadata.labels "mylogin.space/tenant" }}'
                region: '{{ index .metadata.labels "topology.kubernetes.io/region" }}'
                zone: '{{ index .metadata.labels "topology.kubernetes.io/zone" }}'
                datacenter: '{{ index .metadata.labels "resolvemy.host/dc" }}'

  syncPolicy:
    preserveResourcesOnDeletion: true
  
  template:
    metadata:
      name: '{{ .values.clusterName }}-aaa-{{ .values.environment }}'
    
      annotations:
        argocd.argoproj.io/manifest-generate-paths: /AAA

      labels:
        resolvemy.host/env: '{{ .values.environment }}'
        resolvemy.host/priority: 'critical'

    spec:
      project: core
      syncPolicy:
        syncOptions:
          - ServerSideApply=true

      source:
        path: AAA
        repoURL: https://github.com/K-FOSS/CoRE-Backplane.git
        targetRevision: HEAD

        plugin:
          name: argocd-lovely-plugin
          env:
            - name: LOVELY_HELM_MERGE
              value: |- # yaml
                env: '{{ .values.environment }}'

                hub: {{ .values.hub }}

                cluster:
                  name: {{ .values.clusterName }}
                  domain: {{ .values.clusterDomain }}

                authentik:
                  global:
                    additionalLabels:
                      resolvemy.host/env: '{{ .values.environment }}'
                      resolvemy.host/priority: 'critical'

                    {{ if .values.hub }}
                    # -- Additional volumeMounts to all deployed Deployments. Does not apply to GeoIP
                    # @default -- `[]` (See [values.yaml])
                    volumeMounts:
                      - name: tls-certs
                        mountPath: /certs

                    # -- Additional volumes to all deployed Deployments.
                    # @default -- `[]` (See [values.yaml])
                    volumes:
                      - name: tls-certs
                        secret:
                          secretName: myloginspace-default-certificates
                    {{- end }}

      destination:
        server: '{{ .server }}'
        namespace: core-{{ .values.environment }}
