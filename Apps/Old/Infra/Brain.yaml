apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: core-backplane-infra-dbrain
  namespace: argocd
spec:

  generators:
    - list:
        elements:
          - cluster: infra1-dc1
            url: https://172.18.0.1:443
            apiHost: 172.18.0.1
            uuid: 82ad7d07-dc4a-4cce-910b-5eba246929fd
  
          - cluster: k0s-cntrl
            url: https://10.1.1.40:443
            apiHost: 10.1.1.40
            uuid: bcb8c20e-1d27-4213-b851-11dc766326e9

  syncPolicy:
    preserveResourcesOnDeletion: true
  
  template:
    metadata:
      name: '{{cluster}}-infra-dbrain'

      annotations:
        argocd.argoproj.io/manifest-generate-paths: .

    spec:
      project: core
    #   syncPolicy:
    #     automated:
    #       selfHeal: true
    #       prune: true

      source:
        path: DistributedBrain
        repoURL: https://github.com/K-FOSS/CoRE-CNTRL.git
        targetRevision: HEAD
        plugin:
          name: argocd-lovely-plugin
          env:
            - name: LOVELY_HELM_MERGE
              value: |-
                liqo:
                  apiServer:
                    # -- The address that must be used to contact your API server, it needs to be reachable from the clusters that you will peer with (defaults to your master IP).
                    address: {{ apiHost }}
                    # -- Indicates that the API Server is exposing a certificate issued by a trusted Certification Authority.
                    trustedCA: false


                  discovery:
                    config:
                      # -- Specify an unique ID (must be a valid uuidv4) for your cluster, instead of letting helm generate it automatically at install time.
                      # You can generate it using the command: `uuidgen`
                      # This field is needed when using tools such as ArgoCD, since the helm lookup function is not supported and a new value would be generated at each deployment.
                      clusterIDOverride: {{uuid}}
                      # -- Set a mnemonic name for your cluster.
                      clusterName: {{cluster}}

        #         coredns:
        #           affinity:
        #             podAntiAffinity:
        #               preferredDuringSchedulingIgnoredDuringExecution:
        #                 - weight: 100
        #                   podAffinityTerm:
        #                     labelSelector:
        #                       matchExpressions:
        #                         - key: app.kubernetes.io/instance
        #                           operator: In
        #                           values:
        #                             - '{{cluster}}-rdns-lab'
        #                     topologyKey: kubernetes.io/hostname

        #           serviceType: LoadBalancer
        #           service:
        #             annotations:
        #               purelb.io/service-group: anycast
        #             name: test-dns-rdns-core
        #             externalTrafficPolicy: Local
        #             loadBalancerIP: '{{loadBalancerIP}}'



      destination:
        server: '{{url}}'
        namespace: core-prod
