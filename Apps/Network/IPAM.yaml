apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: core-backplane-network-ipam
  namespace: argocd
spec:
  goTemplate: true
  # goTemplateOptions:
  #   - 'missingkey=error'
  generators:
    - merge:
        mergeKeys:
          - name

        generators:
          - list:
              elements:
                - name: core-dc1-talos-prod
                  values:
                    hub: false

                - name: core-home1-talos-prod
                  values:
                    hub: false
          - clusters:
              selector:
                matchLabels:
                  mylogin.space/tenant: 'core.mylogin.space'
                  resolvemy.host/computetype: 'baremetal'
                  resolvemy.host/nodetype: 'infra'
              values:
                clusterName: '{{ .name }}'
                environment: 'prod'
                clusterDomain: '{{ index .metadata.labels "cluster.kubernetes.io/domain" }}'
                tenant: '{{ index .metadata.labels "mylogin.space/tenant" }}'
                region: '{{ index .metadata.labels "topology.kubernetes.io/region" }}'
                zone: '{{ index .metadata.labels "topology.kubernetes.io/zone" }}'
                datacenter: '{{ index .metadata.labels "resolvemy.host/dc" }}'

  syncPolicy:
    preserveResourcesOnDeletion: true

  template:
    metadata:
      name: '{{ .values.clusterName }}-network-ipam-{{ .values.environment }}'

      annotations:
        argocd.argoproj.io/manifest-generate-paths: .

    spec:
      project: core

      source:
        path: Network/IPAM
        repoURL: https://github.com/K-FOSS/CoRE-Backplane.git
        targetRevision: HEAD
        plugin:
          name: argocd-lovely-plugin
          env:
            - name: ARGOCD_APP_NAME
              value: 'netbox-ipam'
            - name: LOVELY_HELM_MERGE
              value: |-
                env: '{{ .values.environment }}'

                hub: {{ .values.hub }}

                cluster:
                  name: {{ .values.clusterName }}
                  domain: {{ .values.clusterDomain }}

                persistence:
                  configs:
                    enabled: true
                    mountPath: /etc/DHCP
                    type: custom
                    volumeSpec:
                      secret:
                        secretName: '{{ .values.clusterName }}-network-ipam-{{ .values.environment }}-dhcp-config'

      destination:
        server: '{{ .server }}'
        namespace: core-{{ .values.environment }}
