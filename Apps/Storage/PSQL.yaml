apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: core-backplane-storage-db-psql
  namespace: argocd

  labels:
    resolvemy.host/env: 'prod'

  annotations:
    argocd.argoproj.io/sync-wave: '5'

spec:
  goTemplate: true
  # goTemplateOptions:
  #   - 'missingkey=error'
  generators:
    - clusters:
        selector:
          matchLabels:
            mylogin.space/tenant: 'core.mylogin.space'

        values:
          clusterName: '{{ .name }}'
          environment: '{{ index .metadata.labels "resolvemy.host/env" }}'
          clusterDomain: '{{ index .metadata.labels "cluster.kubernetes.io/domain" }}'
          tenant: '{{ index .metadata.labels "mylogin.space/tenant" }}'
          region: '{{ index .metadata.labels "topology.kubernetes.io/region" }}'
          zone: '{{ index .metadata.labels "topology.kubernetes.io/zone" }}'
          datacenter: '{{ index .metadata.labels "resolvemy.host/dc" }}'
          hub: '{{ index .metadata.labels "mylogin.space/hub" }}'

  syncPolicy:
    preserveResourcesOnDeletion: true

  template:
    metadata:
      name: '{{ .values.clusterName }}-db-psql'

      labels:
        resolvemy.host/env: '{{ .values.environment }}'
        resolvemy.host/priority: 'critical'

      annotations:
        argocd.argoproj.io/manifest-generate-paths: .

    spec:
      project: core

      source:
        path: Databases/PSQL
        repoURL: https://github.com/K-FOSS/CoRE-Backplane.git
        targetRevision: HEAD
        plugin:
          name: argocd-lovely-plugin
          env:
            - name: LOVELY_HELM_MERGE
              value: |-

                psql:
                  hub: {{ .values.hub }}

                  standby: {{- if eq .values.hub "false" }} true{{- else }} false{{- end -}}

      destination:
        server: '{{ .server }}'
        namespace: core-{{ .values.environment }}
