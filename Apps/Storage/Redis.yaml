apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: core-backplane-keydb-core
  namespace: argocd

  labels:
    resolvemy.host/env: 'prod'

  annotations:
    argocd.argoproj.io/sync-wave: '0'
spec:
  goTemplate: true
  # goTemplateOptions:
  #   - 'missingkey=error'
  generators:
    - clusters:
        selector:
          matchLabels:
            mylogin.space/tenant: 'core.mylogin.space'
            resolvemy.host/env: 'prod'

        values:
          clusterName: '{{ .name }}'
          environment: '{{ index .metadata.labels "resolvemy.host/env" }}'
          clusterDomain: '{{ index .metadata.labels "cluster.kubernetes.io/domain" }}'
          tenant: '{{ index .metadata.labels "mylogin.space/tenant" }}'
          region: '{{ index .metadata.labels "topology.kubernetes.io/region" }}'
          zone: '{{ index .metadata.labels "topology.kubernetes.io/zone" }}'
          datacenter: '{{ index .metadata.labels "resolvemy.host/dc" }}'
          hub: '{{ index .metadata.labels "mylogin.space/hub" }}'

  template:
    metadata:
      name: '{{ .values.clusterName }}-keydb-core'

      annotations:
        argocd.argoproj.io/manifest-generate-paths: .

    spec:
      project: core
      source:
        repoURL: https://github.com/K-FOSS/CoRE-Backplane.git
        path: Storage/KeyDB/KeyDBChart
        targetRevision: main
        helm:
          releaseName: keydb-core
          values: | # yaml
            nodes: 1

            service:
              annotations:
                consul.hashicorp.com/service-name: '{{ .values.clusterName }}-keydb-headless'
                external-dns.alpha.kubernetes.io/hostname: redis.mylogin.space
              labels:
                wan-mode: 'public'

            configExtraArgs:
              - databases: '256'
              - appendfsync: 'no'
              - client-output-buffer-limit: ["replica", "0", "0", "0"]
              - client-output-buffer-limit: ["pubsub", "0", "0", "0"]

            clusterMode: false

            loadBalancer:
              enabled: false
              annotations:
                external-dns.alpha.kubernetes.io/hostname: redis.mylogin.space


      destination:
        server: '{{ .server }}'
        namespace: core-{{ .values.environment }}