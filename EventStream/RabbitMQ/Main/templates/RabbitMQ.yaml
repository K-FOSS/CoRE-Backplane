apiVersion: rabbitmq.com/v1beta1
kind: RabbitmqCluster
metadata:
  name: {{ .Release.Name }}
spec:
  replicas: 3

  service:
    type: ClusterIP

  resources:
    requests:
      cpu: 15m
      memory: 226M

    limits:
      cpu: 500m
      memory: 500M

  tls:
    secretName: myloginspace-default-certificates

  override:
    statefulSet:
      spec:
        template:
          metadata:
            labels:
              logs: loki-myloginspace
          spec:
            containers:
              - name: rabbitmq
                env:

                  - name: USERNAME
                    valueFrom:
                      secretKeyRef:
                        name: {{ .Release.Name }}-sso
                        key: username

                  - name: PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: {{ .Release.Name }}-sso
                        key: password

  rabbitmq:
    additionalPlugins:
      - rabbitmq_auth_backend_cache
      - rabbitmq_auth_backend_ldap
      - rabbitmq_mqtt
      - rabbitmq_web_mqtt
    #   - rabbitmq_federation
    #   - rabbitmq_federation_management
    advancedConfig: |
      [
        {
          rabbitmq_auth_backend_ldap,
            [
              {group_lookup_base, "ou=groups,dc=ldap,dc=mylogin,dc=space"},
              {resource_access_query, {in_group, "cn=MQTT Users,ou=groups,dc=ldap,dc=mylogin,dc=space"}},
              {vhost_access_query, {in_group, "cn=MQTT Users,ou=groups,dc=ldap,dc=mylogin,dc=space"}},
              {tag_queries, 
                [
                  {administrator, 
                    {in_group, "cn=authentik Admins,ou=groups,dc=ldap,dc=mylogin,dc=space"}
                  },
                  {management,
                    {constant, true}
                  }
                ]
              }
            ]
        }
      ].


    additionalConfig: |
      cluster_partition_handling = pause_minority
      disk_free_limit.relative = 1.0
      collect_statistics_interval = 10000

      auth_backends.1 = cache
      auth_cache.cached_backend = ldap
      auth_ldap.servers.1 = ldap.mylogin.space
      auth_ldap.use_ssl = false
      auth_ldap.port = 389
      auth_ldap.log = true
      auth_ldap.timeout = 15000

      auth_ldap.other_bind.user_dn = cn=$(USERNAME),ou=users,dc=ldap,dc=mylogin,dc=space
      auth_ldap.other_bind.password = $(PASSWORD)

      auth_ldap.dn_lookup_attribute = cn
      auth_ldap.dn_lookup_base = ou=users,dc=ldap,dc=mylogin,dc=space

      auth_ldap.user_dn_pattern = cn=${username},ou=users,dc=ldap,dc=mylogin,dc=space

      mqtt.listeners.tcp.default = 1883
      mqtt.listeners.ssl.default = 8883
      mqtt.vhost            = /
      mqtt.allow_anonymous = false

      mqtt.tcp_listen_options.backlog = 4096
      mqtt.tcp_listen_options.buffer  = 131072
      mqtt.tcp_listen_options.recbuf  = 131072
      mqtt.tcp_listen_options.sndbuf  = 131072

      mqtt.tcp_listen_options.keepalive = true
      mqtt.tcp_listen_options.nodelay   = true

      mqtt.tcp_listen_options.exit_on_close = true
      mqtt.tcp_listen_options.send_timeout  = 120